#!/bin/sh

# Custom subscript to summary the login information.
# Usage:
#   $ hosts-monitor stat --help
#
# Try 'hosts-monitor --help' for more information

# ==== /usr/local/bin/hosts-monitor @ 2018/5/3 by bassykuo <aaammmyyy27@gmail.com> ====
SUBPROG=$(echo $0 | awk -F'/' '{print $NF}')
. $install_dir/bin/profile

# ---[ Help
show_help() {
    printf "%s\n" "Usage: $PROG $SUBPROG [-t [<SOURCE_DATE>,]<TARGET_DATE>] COMMAND [OPTIONS]"
    echo ""
    format="%s\t%s\t%s\n"
    ( \
    printf $format "DURATION" "" ""
    printf $format "   -t <TARGET_DATE>" "search logs of <target_date>" "ex: -t today"
    printf $format "   -t <SOURCE_DATE>,<TARGET_DATE>" "search logs between <source_date> and <target_date>" "ex: -t 2018-04-13,2018-05-01"
    printf "\n"
    printf $format "COMMAND" "" ""
    printf $format "   -ip" "ip stat" ""
    printf $format "   -id" "userid stat" ""
    printf "\n"
    printf $format "OPTIONS" "" ""
    printf $format "   head -n{NUM}" "show top ${UNDERLINE}NUM$RESET"
    printf $format "   tail -n{NUM}" "show last ${UNDERLINE}NUM$RESET"
    printf $format "   -n{NUM}" "i.e. \`head -n{NUM}\`"
    printf $format "   +n{NUM}" "i.e. \`tail -n{NUM}\`"
    printf $format "   {-a,--all}" "show all"
    ) | column -e -t -s "$TAB" | awk '{print "   "$0}'
    echo ""
    echo "Example:"
    echo "   $PROG $SUBPROG -id"
    echo "   $PROG $SUBPROG -id tail -n20"
    echo "   $PROG $SUBPROG -ip --all"
    echo "   $PROG $SUBPROG -t yesterday today -ip --all"
    exit 0
}

# ---[ Functions
format="%6s\t%-24s%-14s"

get_sourcelog() {
    duration=$($install_dir/bin/log ${timecmd:-'--all'} --color=no | sed '1,3d' | sed '1p;$p;d' | awk '{print $1}')
    printf "Duration: ${BOLD}%s$RESET to ${BOLD}%s$RESET\n" $duration
    printf "\n"
    sourcelog=`tempfile`
    $install_dir/bin/log ${timecmd:-'--all'} --color=no | sed '1,3d' | tee $sourcelog > /dev/null
}

show_all_stat() {
    show_id_stat $*
    echo ""
    show_ip_stat $*
}

show_id_stat() {
    tmpfile=`tempfile`
    cmd=$*
    get_sourcelog
    printf "$UNDERLINE$format%-120s$RESET\n" "Rank" "UserID" "Times" "Top-5"
    printf "$format\n" `cat $sourcelog | awk '{if ($5) print $5}' | grep -v "\*" --color=no | sort | uniq -c | sort -k1nr | awk '{print $2"\t"$1}' | nl | $cmd` > $tmpfile
    ( \
        for userid in `awk '{print $2}' $tmpfile`; do
            printf "%-16s%-6s" `grep -w $userid $sourcelog | awk '{print $6}' | sort | uniq -c | sort -k1nr | awk '{print $2" ("$1")"}' | head -n5`
            printf "\n"
        done ) | paste -d '' $tmpfile -
}

show_ip_stat() {
    tmpfile=`tempfile`
    cmd=$*
    get_sourcelog
    printf "$UNDERLINE$format%-120s$RESET\n" "Rank" "IP" "Times" "Login(top-15)"
    printf "$format\n" `cat $sourcelog | awk '{if ($6) if ($5 !~ /\*/) print $6}' | grep "\([0-9]\{1,3\}\.\)\{1,3\}[0-9]\{1,3\}" --color=no | sort | uniq -c | sort -k1nr | awk '{print $2"\t"$1}' | nl | $cmd` > $tmpfile
    ( \
        for logip in `awk '{print $2}' $tmpfile`; do
            printf "%s " `grep -w $logip $sourcelog | awk '{if ($5!~/\*/) print $5}' | sort | uniq -c | sort -k1nr | awk '{print $2"("$1")"}' | head -n15`
            printf "\n"
        done ) | paste -d '' $tmpfile -
}

cmd_filter() {
    case $1 in 
        -a|-all|--all)
            cmd="cat"
            ;;
        -*|"")
            cmd="head $*"
            ;;
        +n*)
            cmd="tail `echo "$*" | sed 's/+/-/g'`"
            ;;
        *)
            cmd=$*
            ;;
    esac
}

# ---[ Content
case $1 in 
    -t|--time)
        timecmd="-t $2"
        shift; shift;
        ;;
    -t=*|--time=*)
        timecmd="-t `echo $1 | cut -d= -f2`"
        shift;
        ;;
esac
case $1 in
    "-h"|"--help"|"help")
        show_help
        exit 0
        ;;
    -id)
        shift
        cmd_filter $*
        show_id_stat $cmd
        ;;
    -ip)
        shift;
        cmd_filter $*
        show_ip_stat $cmd
        ;;
    -*)
        echo "$PROG $SUBPROG: invalid option '$@'"
        echo "Try '$PROG $SUBPROG --help' for more information."
        exit 0
        ;;
    *)
        cmd_filter $*
        show_all_stat $cmd
        exit 0
esac
