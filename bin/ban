#!/bin/sh

# Custom subscript to ban/unban the login.
# Usage:
#     hosts-monitor ban --help
#     hosts-monitor unban --help
#
# Try 'hosts-monitor --help' for more information

# ==== /usr/local/bin/hosts-monitor @ 2018/4/3 by bassykuo <aaammmyyy27@gmail.com> ====
SUBPROG=$(echo $0 | awk -F'/' '{print $NF}')
. $install_dir/bin/profile

# ---[ Help
show_help() {
    printf "%s\n" "Usage: $PROG {ban,unban} [-m <message>] <ip>"
    echo ""
    format="%s\t%s\t%s\n"
    ( \
    printf $format "ban <ip> ..." "add specific ips to hosts.deny" "ex: ban 1.1.1.1 6.6.6.6 8.8."
    printf $format "unban <ip> ..." "remove specific ips from hosts.deny" "ex: unban 2.2.2.2 8.8."
    printf $format "ban -m <message> <ip> ..." "add a description about this action" "ex: ban -m 'AlwaysLoginAsRoot' 2.2.2.2"
    printf $format "unban -m <message> <ip> ..." "add a description about this action" "ex: unban -m 'safe' 2.2.2.2"
    ) | column -t -s "$TAB" | awk '{print "   "$0}'
    echo ""
    exit 0
}

# ---[ Functions
ban_ip() {
    IP=$1; shift;
    (printf "ALL: %-18s # " "$IP" ; echo "${1:+"$@"}") >> $hosts_deny
    update_repo "$(date '+%F %T') $PROG Manual:$USER_NAME null $IP Ban $@"
    echo "$GREEN$BOLD+++ Ban$RESET $IP"
}
unban_ip() {
    IP=$1
    format="%-44s"
    # Fail2ban unban
    if which fail2ban-client > /dev/null ; then
        printf $format ">>> Check$BOLD fail2ban$RESET service ..."
        jails=$(fail2ban-client status | grep "Jail list" --color=no | sed "s/^.*Jail list:\s\+\(.*\)$/\1/g;")
        for jail in $jails; do
            fail2ban-client status $jail | grep -w $IP > /dev/null && ( \
                fail2ban-client set $jail unbanip $IP > /dev/null
                echo "$RED${BOLD}unban$RESET $IP"
                ) || echo "(not found)"
        done
    fi

    # hosts.deny line delete
    printf $format ">>> Check$BOLD $hosts_deny$RESET ..."
    grep $IP $hosts_deny > /dev/null && ( \
        sed -i "/$IP\($\| \)/d" $hosts_deny
        update_repo "$(date '+%F %T') $PROG Manual:$USER_NAME null $IP Unban $2"
        echo "$RED${BOLD}unban$RESET $IP"
        ) || echo "(not found)"
}

# ---[ Content
choice=$1
comment="$TIME by $USER_NAME"
case $1 in
    "ban"|"unban")
        shift;
        if [ "$1" = '-m' ] ; then comment="$2"; shift; shift; fi
        KEY=$1
        case $KEY in
            "-h"|"--help"|"help")
                show_help
                ;;
            -*)
                echo "$PROG $SUBPROG: invalid option '$@'"
                echo "Try '$PROG $SUBPROG --help' for more information."
                exit 0
                ;;
            *)
                if [ $# -eq 0 ] ; then
                    echo "$PROG $SUBPROG: invalid option '$@'"
                    echo "Try '$PROG $SUBPROG --help' for more information."
                    exit 0
                fi
                while test $# -gt 0; do
                    check_ip $1 && IP=$1 || exit 1
                    test $choice = 'ban' && ban_ip $IP $(echo $comment | tr ' :' '-') || unban_ip $IP $(echo $comment | tr ' :' '-')
                    shift
                done
                test $choice = 'ban' && (echo ; cat $shortrepo)
                ;;
        esac
        ;;
    *)
        echo "$PROG $SUBPROG: invalid option '$@'"
        echo "Try '$PROG $SUBPROG --help' for more information."
esac
