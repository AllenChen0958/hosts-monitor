
# READ ONLY!

INSTALL_DIR=/opt/hosts-monitor
SERVICE=/etc/cron.hourly/hosts-monitor-service
CMD=/usr/local/bin/hosts-monitor

# ---[ Local Variables
SERVICE_NAME="service/hosts-monitor-service"
PROG="hosts-monitor"
FORMAT="%-13s%-11s%-15s%-19s%-16s%-17s%-10s%-7s\n"
HEADER="Date Time Service Event UserID SourceIP Status Note"
LINE_LENGTH=$(printf $FORMAT $HEADER | wc -L)
FOOTER="[ $(date '+%F %R') UPDATE ]"
TIME=$(date '+%F.%T')
USER_NAME=$(who -m | awk '{print $1}')

CONFIG=$INSTALL_DIR/config
config_temp=`tempfile`
sed -n '/^#.*/d; 1,/\[env\]/d; /\[\w\+\]/,$d; /^$/d; p' $CONFIG > $config_temp
. $config_temp && rm -f $config_temp


hosts_deny=/etc/hosts.deny
hosts_allow=/etc/hosts.allow
report=${REPORT_LOC:=$INSTALL_DIR}/hosts-monitor.report
shortrepo=${REPORT_NEW:-/etc/ssh/sshd_banner}
debug_mode=${DEBUG_MODE:-0}
failed_passwd_retry=${PASSWD_RETRY:-2}

UNDERLINE=$(tput smul)
BOLD=$(tput bold)
RED=$(tput setaf 1)
GREEN=$(tput setaf 2)
YELLOW=$(tput setaf 3)
RESET=$(tput sgr0)
TAB=$(printf "\t")

# ---[ Functions
errmsg() {
    echo "FATAL: $1"
}
log() {
    logger -t "$PROG" -p "local7.info" "$@"
}
debug_log() {
    filename="$1"
    note="$2"
    cat $filename | awk -v note="$note" '{print "(DEBUG) "note"\t"$0;}' | logger -t "$PROG" -p "local7.notice"
}
check_ip() {
    IP=$1
    echo $IP | grep '^[0-9]\{1,3\}\.\(\([0-9]\{1,3\}\.\)\{,2\}$\|\(\([0-9]\{1,3\}\.\)\{2\}[0-9]\{1,3\}$\)\)' > /dev/null && \
        return 0 || \
        (errmsg "$RED$BOLD$IP$RESET is a bad ip format!"; return 1)
}
fetch_rules() {
    allow_rules=$(sed -n '/#.*/d; 1,/\[allow\]/d; /\[\w\+\]/,$d; /^$/d; p' $CONFIG)
    deny_rules=$(sed -n '/#.*/d; 1,/\[deny\]/d; /\[\w\+\]/,$d; /^$/d; p' $CONFIG)
}


# ---[ Report Functions
print_header() {
    printf $FORMAT "-" | sed 's/ /-/g'
    printf $FORMAT $HEADER
    printf $FORMAT "-" | sed 's/ /-/g'
}
print_footer() {
    echo "$FOOTER" | wc -L | \
        awk -v "len=$LINE_LENGTH" -v "footer=$FOOTER" \
            '{ for(i=1;i<=(len-$1)/2;i++) printf "-"; }
            { printf "%s", footer }
            { for(i=1;i<=(len-$1)/2;i++) printf "-"; printf "\n" }'
}
update_repo() {
    sed -i '/--\[.*\]--/d' $shortrepo
    echo $@ | \
        awk -v "format=$FORMAT" \
            'NF>0  { gsub("null","*",$5); 
                     if (NF >= 8) $8 = substr($0, index($0,$8)); 
                     printf format, $1, $2, $3, $4, $5, $6, $7, $8 }' | tee -a $report | \
    tee -a $shortrepo > /dev/null
}
