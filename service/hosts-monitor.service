#!/bin/sh

# Source      : /var/log/auth.log* , /var/log/fail2ban*
# Destination : /etc/hosts.deny , /etc/hosts.allow
# Report      : /home/hosts-monitor.report

# ==== /etc/crond.hourly/hosts-monitor.service @ 2018/5/9 by bassykuo <aaammmyyy27@gmail.com> ====

INSTALL_DIR=/opt/hosts-monitor
. $INSTALL_DIR/bin/profile

#report=./report
#shortrepo=./short
#hosts_deny=./hosts.deny

query_cmd='/bin/journalctl'
fail2ban_cmd='/usr/bin/fail2ban-client'
ban_list=`tempfile`
time_str="1 hour ago"

# Backup
#   at 1st day 01:00 in month
if [ `date +%a%H` = 'Mon01' ]; then
    for i in $(seq 5 -1 1); do
        mv $report.$i $report.$(($i+1))
    done
    mv $report $report.1
fi

test -f $report || print_header >> $report
rm -f $shortrepo
touch $shortrepo
fetch_rules
refused_ip=`($query_cmd -t sshd --since "$time_str" | grep "refused connect from" | sed "s/.*(\([0-9.]\+\))$/\1/g"; awk '{print $2}' $hosts_deny) | grep --color=no "^[0-9]" | sort | uniq`

# Always ban: (1) Failed-Password (2) Invalid-User in DenyRules (3) Retry-IP (4) from Fail2Ban
( \
    # Failed-Password
    $query_cmd -t sshd --since "$time_str" | grep "authentication failure;.* user=" | \
        awk 'NF>0{  cmd="date +%F -d"$1$2; (cmd | getline date);
                print date" "$3" sshd Failed-Password "$15" "$14" "}' | sed -e 's/user=//g;s/rhost=//g' | tee -a $shortrepo | \
        awk '{  gsub(":","-",$0);
                printf "ALL: %-18s # %s (%s login=%s)\n", $6, $1"."$2, $4, $5;}';

    # Deny-Rules
    $query_cmd -t sshd --since "$time_str" | grep "Invalid user" | \
        awk 'NF>0{  cmd="date +%F -d"$1$2; (cmd | getline date);
                print date" "$3" sshd Invalid-User "$8" "$10" "}' | tee -a $shortrepo | \
        grep --color=no "$(echo $deny_rules | sed 's/ / \\| /g; s/^\(.*\)$/\\( \1 \\)/g')" | \
        awk '{  gsub(":","-",$0);
                printf "ALL: %-18s # %s (DenyRule login=%s)\n", $6, $1"."$2, $5;}';

    # Retry-IP
    $query_cmd -t sshd --since "$time_str" | grep "Invalid user" | \
        awk '{  cmd="date +%F -d"$1$2; (cmd | getline date);
                gsub(":","-",$0);
                printf "ALL: %-18s # %s (Retry-BruteForce)\n", $10, date"."$3;}' | \
        sort -k2,2 -n | uniq -d -w21;

    # Fail2Ban
    ## **DEPRECATED** -------------------------------------------------
    ##      `Ban from fail2ban` will be deprecated in the version 3.0.
    ## ----------------------------------------------------------------
    zgrep "Ban" /var/log/fail2ban.log* | \
        sed "s/^[^:]\+:\([^,]\+\),[0-9]\+ .* \(\([0-9]\+\.\)\{3\}[0-9]\+\)$/\1 \2/g" | \
        #awk -v "onehourago=`date +%s -d'1 hour ago'`" \
            #'NF>0 { cmd="date +%s -d"$1"\\t"$2; 
              #(cmd | getline t); 
              #if (t > onehourago) print $1" "$2" "$3; 
              #close(cmd); }';
        awk '{  gsub(":","-",$0);
                printf "ALL: %-18s # %s (Fail2ban)\n", $3, $1"."$2; }';
) | \
    grep --color=no "\([0-9]\{1,3\}.\)\{3\}[0-9]\{1,3\}" | \
    grep -v "$(echo $allow_rules | sed 's/ / \\| /g; s/^\(.*\)$/\\( \1 \\)/g')" | \
    awk -v "refused_ip=$refused_ip" \
        'NF>0  { if( ! index(refused_ip, $2)) print $0; }' | \
    sort -k2,2 -n | uniq -w21 > $ban_list


ban_ip=$(awk 'NF>0 {print $2}' $ban_list)
cat $ban_list >> $hosts_deny
rm -f $ban_list

sort $shortrepo | \
    awk -v "ban_ip=$ban_ip" -v "format=$FORMAT" \
        'NF>0  { if(index(ban_ip, $6)) $7="Ban";
                printf format, $1, $2, $3, $4, $5, $6, $7, "" }' | uniq | tee $shortrepo >> $report
sed -i 1i"$(printf $FORMAT $HEADER)" $shortrepo
#column -t $shortrepo
