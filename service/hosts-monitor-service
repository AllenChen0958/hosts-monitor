#!/bin/sh

# Source      : /var/log/auth.log* , /var/log/fail2ban*
# Destination : /etc/hosts.deny , /etc/hosts.allow
# Report      : /var/log/hosts-monitor/hosts-monitor.report

# ==== /etc/crond.hourly/hosts-monitor-service @ 2018/10/5 by bassykuo <aaammmyyy27@gmail.com> ====

INSTALL_DIR=/opt/hosts-monitor
. ${install_dir:-$INSTALL_DIR}/bin/profile

#report=./report
#shortrepo=./short
#hosts_deny=./hosts.deny
shorttemp="$shortrepo.tmp"

query_cmd='/bin/journalctl'
ban_list=`tempfile`
since_time="`date -d'60 min ago' '+%F %T'`"
now_time="`date '+%F %T'`"

# -----------------------------
# Backup
#   at 1st day 01:00 in month
# -----------------------------
if [ `date +%d%H` = '0101' ]; then
    log "(start) BACKUP $report"
    for i in $(seq 5 -1 1); do
        mv $report.$i $report.$(($i+1))
    done
    mv $report $report.1
    log "(end) BACKUP $report"
fi

test -f $report || print_header >> $report

rm -f $shorttemp
fetch_rules
#******************************************************
# Remove it to fix the problem of `awk' long arguments
#******************************************************
#refused_ip=`awk '{print $2}' $hosts_deny | grep --color=no "^[0-9]" | sort | uniq | awk '{print " "$0" "}'`

# ------------
# System Log
# ------------
#test $debug_mode -eq 1 && log "\$TERM=$TERM"       # Debug logger
#test $debug_mode -eq 1 && log "\$-=$-"             # Debug logger
log "(start) SCAN $since_time to $now_time"


# ----------------------------------------------------------------
# Always ban: (1) Failed-Password > N (2) DenyRules (3) Retry-IP
# ----------------------------------------------------------------
( \
    # Failed-Password
    $query_cmd -t sshd --since="$since_time" --until="$now_time" | grep --color=no "sshd\[[0-9]\+\]: Failed password for [^ ]\+ from" | \
        awk 'NF>0{  cmd="date +%F -d"$1$2; (cmd | getline date);
                print date" "$3" sshd Failed-Password "$9" "$11" "}' | tee -a $shorttemp | \
        awk '{  printf "%-23s %s %s\n", $6, $1"."$2, $5; }' | \
            sort | uniq -c -w21 | \
            awk '($1 > '$failed_passwd_retry')' | \
        awk '{  gsub(":","-",$0);
                printf "ALL: %-18s # %s (Failed-Password<%s> login=%s)\n", $2, $3, $1, $4;}';

    # Deny-Rules
    ( \
    $query_cmd -t sshd --since="$since_time" --until="$now_time" | grep --color=no "sshd\[[0-9]\+\]: Failed password for [^ ]\+ from" | \
        awk 'NF>0{  cmd="date +%F -d"$1$2; (cmd | getline date);
                print date" "$3" sshd Failed-Password "$9" "$11" "}';
    $query_cmd -t sshd --since="$since_time" --until="$now_time" | grep --color=no "sshd\[[0-9]\+\]: Failed password for invalid user [^ ]\+ from" | \
        awk 'NF>0{  cmd="date +%F -d"$1$2; (cmd | getline date);
                print date" "$3" sshd Invalid-User "$11" "$13" "}' | tee -a $shorttemp
    ) | \
        grep --color=no "$(echo $deny_rules | sed 's/ / \\| /g; s/^\(.*\)$/\\( \1 \\)/g')" | \
        awk '{  gsub(":","-",$0);
                printf "ALL: %-18s # %s (DenyRule login=%s)\n", $6, $1"."$2, $5;}';

    test $debug_mode -eq 1 && debug_log $shorttemp "shorttemp"       # Debug logger

    # Retry-IP
    $query_cmd -t sshd --since="$since_time" --until="$now_time" | grep --color=no "sshd\[[0-9]\+\]: Failed password for invalid user [^ ]\+ from" | \
        awk '{  cmd="date +%F -d"$1$2; (cmd | getline date);
                gsub(":","-",$0);
                printf "ALL: %-18s # %s (Retry-BruteForce)\n", $13, date"."$3;}' | \
        sort -k2,2 -n | uniq -d -w21;

    # Fail2Ban
    ## **DEPRECATED** -------------------------------------------------
    ##      `Ban from fail2ban` will be deprecated in the version 3.0.
    ## ----------------------------------------------------------------
    #zgrep "Ban" /var/log/fail2ban.log* | \
        #sed "s/^[^:]\+:\([^,]\+\),[0-9]\+ .* \(\([0-9]\+\.\)\{3\}[0-9]\+\)$/\1 \2/g" | \
        #awk '{  gsub(":","-",$0);
                #printf "ALL: %-18s # %s (Fail2ban)\n", $3, $1"."$2; }';
) | \
    grep --color=no "\([0-9]\{1,3\}\.\)\{3\}[0-9]\{1,3\}" | \
    grep -v "$(echo $allow_rules | sed 's/ / \\| /g; s/^\(.*\)$/\\( \1 \\)/g')" | \
    #awk -v refused_ip="$refused_ip" \
        #'NF>0  { if( ! match(refused_ip, " "$2" ")) print $0; }' | \
    sort -k2,2 -n | uniq -w21 > $ban_list

test $debug_mode -eq 1 && debug_log $ban_list "ban_list"       # Debug logger

ban_ip=$(awk 'NF>0 {print " "$2" "}' $ban_list)
cat $ban_list >> $hosts_deny
rm -f $ban_list

sort $shorttemp | \
uniq | \
    awk -v ban_ip="$ban_ip" -v "format=$FORMAT" \
        'NF>0  { if( match(ban_ip, " "$6" ")) $7="Ban";
                 printf format, $1, $2, $3, $4, $5, $6, $7, ""; }' | tee $shortrepo >> $report
test $debug_mode -eq 1 && debug_log $shortrepo "shortrepo"       # Debug logger
rm -f $shorttemp
sed -i 1i"$(printf $FORMAT $HEADER)" $shortrepo
#column -t $shortrepo



log "(end) SCAN $since_time to $now_time"
